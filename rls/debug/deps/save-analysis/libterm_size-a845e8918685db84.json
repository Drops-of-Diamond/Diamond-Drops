{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"term_size","disambiguator":[9805189216874925078,5839764073268325226]},"crate_root":"/home/james/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src","external_crates":[{"file_name":"/home/james/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14132309451737505806,1467093456902793816]}},{"file_name":"/home/james/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[7759421768987061506,4831383116449874575]}},{"file_name":"/home/james/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3073455727397266299,17994214840392722620]}},{"file_name":"/home/james/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[13537501980368877142,14868096434222058830]}},{"file_name":"/home/james/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[15787344780239003752,1516226459437447392]}},{"file_name":"/home/james/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[16858972993823147571,9260898311097977757]}},{"file_name":"/home/james/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14919942949869589394,8237062121922052545]}},{"file_name":"/home/james/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[181628772392720438,3888072624545100213]}},{"file_name":"/home/james/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[948239500546670706,6243098853028782101]}},{"file_name":"/home/james/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":10,"id":{"name":"libc","disambiguator":[13706360226707903930,3980553811867723424]}}],"span":{"file_name":[47,104,111,109,101,47,106,97,109,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,114,109,95,115,105,122,101,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":209,"byte_end":8943,"line_start":6,"line_end":237,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":48},"span":{"file_name":[47,104,111,109,101,47,106,97,109,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,114,109,95,115,105,122,101,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":784,"byte_end":794,"line_start":22,"line_end":22,"column_start":20,"column_end":30},"name":"dimensions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":50},"span":{"file_name":[47,104,111,109,101,47,106,97,109,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,114,109,95,115,105,122,101,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":796,"byte_end":813,"line_start":22,"line_end":22,"column_start":32,"column_end":49},"name":"dimensions_stdout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":52},"span":{"file_name":[47,104,111,109,101,47,106,97,109,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,114,109,95,115,105,122,101,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":815,"byte_end":831,"line_start":22,"line_end":22,"column_start":51,"column_end":67},"name":"dimensions_stdin","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":54},"span":{"file_name":[47,104,111,109,101,47,106,97,109,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,114,109,95,115,105,122,101,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":833,"byte_end":850,"line_start":22,"line_end":22,"column_start":69,"column_end":86},"name":"dimensions_stderr","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,106,97,109,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,114,109,95,115,105,122,101,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":209,"byte_end":8943,"line_start":6,"line_end":237,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/james/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":18}],"decl_id":null,"docs":" System calls for getting the terminal size.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":48},"span":{"file_name":[47,104,111,109,101,47,106,97,109,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,114,109,95,115,105,122,101,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4471,"byte_end":4481,"line_start":123,"line_end":123,"column_start":12,"column_end":22},"name":"dimensions","qualname":"::platform::dimensions","value":"fn () -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Query the current processes's output (`stdout`), input (`stdin`), and error (`stderr`) in\n that order, in the attempt to dtermine terminal width. If one of those streams is actually\n a tty, this function returns its width and height as a number of characters.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":50},"span":{"file_name":[47,104,111,109,101,47,106,97,109,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,114,109,95,115,105,122,101,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5061,"byte_end":5078,"line_start":138,"line_end":138,"column_start":12,"column_end":29},"name":"dimensions_stdout","qualname":"::platform::dimensions_stdout","value":"fn () -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Query the current processes's output (`stdout`) *only*, in the attempt to dtermine\n terminal width. If that streams is actually a tty, this function returns its width\n and height as a number of characters.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":52},"span":{"file_name":[47,104,111,109,101,47,106,97,109,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,114,109,95,115,105,122,101,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5656,"byte_end":5672,"line_start":153,"line_end":153,"column_start":12,"column_end":28},"name":"dimensions_stdin","qualname":"::platform::dimensions_stdin","value":"fn () -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Query the current processes's input (`stdin`) *only*, in the attempt to dtermine\n terminal width. If that streams is actually a tty, this function returns its width\n and height as a number of characters.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":54},"span":{"file_name":[47,104,111,109,101,47,106,97,109,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,114,109,95,115,105,122,101,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6257,"byte_end":6274,"line_start":168,"line_end":168,"column_start":12,"column_end":29},"name":"dimensions_stderr","qualname":"::platform::dimensions_stderr","value":"fn () -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Query the current processes's error output (`stderr`) *only*, in the attempt to dtermine\n terminal width. If that streams is actually a tty, this function returns its width\n and height as a number of characters.","sig":null,"attributes":[]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}